// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.remotecaptury;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.remotecaptury.global.remotecaptury.*;


// sent to client
// as a reply to CapturyStreamPacket
@Properties(inherit = us.ihmc.remotecaptury.RemoteCapturyConfig.class)
public class CapturyPosePacket2 extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CapturyPosePacket2() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CapturyPosePacket2(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CapturyPosePacket2(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CapturyPosePacket2 position(long position) {
        return (CapturyPosePacket2)super.position(position);
    }
    @Override public CapturyPosePacket2 getPointer(long i) {
        return new CapturyPosePacket2((Pointer)this).offsetAddress(i);
    }

	public native int type(); public native CapturyPosePacket2 type(int setter);	// capturyPose2
	public native int size(); public native CapturyPosePacket2 size(int setter);	// size of full message including type and size

	public native int actor(); public native CapturyPosePacket2 actor(int setter);
	public native @Cast("uint64_t") long timestamp(); public native CapturyPosePacket2 timestamp(long setter);
	public native @Cast("uint8_t") byte trackingQuality(); public native CapturyPosePacket2 trackingQuality(byte setter); // [0 .. 100]
	public native @Cast("uint8_t") byte scalingProgress(); public native CapturyPosePacket2 scalingProgress(byte setter); // [0 .. 100]
	public native @Cast("uint8_t") byte flags(); public native CapturyPosePacket2 flags(byte setter);     // CAPTURY_LEFT_FOOT_ON_GROUND | CAPTURY_RIGHT_FOOT_ON_GROUND
	public native @Cast("uint8_t") byte reserved(); public native CapturyPosePacket2 reserved(byte setter);  // 0 for now
	public native int numValues(); public native CapturyPosePacket2 numValues(int setter); // 6 * numJoints + numBlendShapes + (numJoints if scale is enabled)
	public native float values(int i); public native CapturyPosePacket2 values(int i, float setter);
	@MemberGetter public native FloatPointer values();
}
