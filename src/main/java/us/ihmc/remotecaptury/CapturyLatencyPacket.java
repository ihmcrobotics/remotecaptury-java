// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.remotecaptury;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.remotecaptury.global.remotecaptury.*;


// sent to client
// as a reply to CapturyStreamPacket
@Properties(inherit = us.ihmc.remotecaptury.RemoteCapturyConfig.class)
public class CapturyLatencyPacket extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CapturyLatencyPacket() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CapturyLatencyPacket(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CapturyLatencyPacket(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CapturyLatencyPacket position(long position) {
        return (CapturyLatencyPacket)super.position(position);
    }
    @Override public CapturyLatencyPacket getPointer(long i) {
        return new CapturyLatencyPacket((Pointer)this).offsetAddress(i);
    }

	public native int type(); public native CapturyLatencyPacket type(int setter);	// capturyLatency
	public native int size(); public native CapturyLatencyPacket size(int setter);	// size of full message including type and size

	public native @Cast("uint64_t") long firstImagePacket(); public native CapturyLatencyPacket firstImagePacket(long setter);
	public native @Cast("uint64_t") long optimizationStart(); public native CapturyLatencyPacket optimizationStart(long setter);
	public native @Cast("uint64_t") long optimizationEnd(); public native CapturyLatencyPacket optimizationEnd(long setter);
	public native @Cast("uint64_t") long sendPacketTime(); public native CapturyLatencyPacket sendPacketTime(long setter); // right before packet is sent

	public native @Cast("uint64_t") long poseTimestamp(); public native CapturyLatencyPacket poseTimestamp(long setter);	// timestamp of corresponding pose
}
