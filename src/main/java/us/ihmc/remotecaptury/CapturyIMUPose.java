// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.remotecaptury;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.remotecaptury.global.remotecaptury.*;


@Properties(inherit = us.ihmc.remotecaptury.RemoteCapturyConfig.class)
public class CapturyIMUPose extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CapturyIMUPose() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CapturyIMUPose(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CapturyIMUPose(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CapturyIMUPose position(long position) {
        return (CapturyIMUPose)super.position(position);
    }
    @Override public CapturyIMUPose getPointer(long i) {
        return new CapturyIMUPose((Pointer)this).offsetAddress(i);
    }

	public native @Cast("uint32_t") int imu(); public native CapturyIMUPose imu(int setter);
	public native @Cast("uint64_t") long timestamp(); public native CapturyIMUPose timestamp(long setter);	// in microseconds - since the start of Captury Live
	public native float orientation(int i); public native CapturyIMUPose orientation(int i, float setter);
	@MemberGetter public native FloatPointer orientation();
	public native float acceleration(int i); public native CapturyIMUPose acceleration(int i, float setter);
	@MemberGetter public native FloatPointer acceleration();// linear acceleration
	public native @Name("position") float _position(int i); public native CapturyIMUPose _position(int i, float setter);
	@MemberGetter public native @Name("position") FloatPointer _position();
}
