// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.remotecaptury;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.remotecaptury.global.remotecaptury.*;


@Properties(inherit = us.ihmc.remotecaptury.RemoteCapturyConfig.class)
public class CapturyPose extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CapturyPose() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CapturyPose(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CapturyPose(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CapturyPose position(long position) {
        return (CapturyPose)super.position(position);
    }
    @Override public CapturyPose getPointer(long i) {
        return new CapturyPose((Pointer)this).offsetAddress(i);
    }

	public native int actor(); public native CapturyPose actor(int setter);
	public native @Cast("uint64_t") long timestamp(); public native CapturyPose timestamp(long setter);	// in microseconds - since the start of Captury Live
	public native int numTransforms(); public native CapturyPose numTransforms(int setter);
	public native CapturyTransform transforms(); public native CapturyPose transforms(CapturyTransform setter);	// one CapturyTransform per joint in global (world space) coordinates
						// the transforms are in the same order as the joints
						// in the corresponding CapturyActor.joints array
	public native @Cast("uint32_t") int flags(); public native CapturyPose flags(int setter);		// feet-on-ground
	public native int numBlendShapes(); public native CapturyPose numBlendShapes(int setter);
	public native FloatPointer blendShapeActivations(); public native CapturyPose blendShapeActivations(FloatPointer setter);
}
