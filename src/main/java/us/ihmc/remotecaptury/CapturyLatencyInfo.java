// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.remotecaptury;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.remotecaptury.global.remotecaptury.*;


@Properties(inherit = us.ihmc.remotecaptury.RemoteCapturyConfig.class)
public class CapturyLatencyInfo extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CapturyLatencyInfo() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CapturyLatencyInfo(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CapturyLatencyInfo(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CapturyLatencyInfo position(long position) {
        return (CapturyLatencyInfo)super.position(position);
    }
    @Override public CapturyLatencyInfo getPointer(long i) {
        return new CapturyLatencyInfo((Pointer)this).offsetAddress(i);
    }

	public native @Cast("uint64_t") long firstImagePacketTime(); public native CapturyLatencyInfo firstImagePacketTime(long setter);
	public native @Cast("uint64_t") long optimizationStartTime(); public native CapturyLatencyInfo optimizationStartTime(long setter);
	public native @Cast("uint64_t") long optimizationEndTime(); public native CapturyLatencyInfo optimizationEndTime(long setter);
	public native @Cast("uint64_t") long poseSentTime(); public native CapturyLatencyInfo poseSentTime(long setter);
	public native @Cast("uint64_t") long poseReceivedTime(); public native CapturyLatencyInfo poseReceivedTime(long setter);

	public native @Cast("uint64_t") long timestampOfCorrespondingPose(); public native CapturyLatencyInfo timestampOfCorrespondingPose(long setter);
}
