// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.remotecaptury;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.remotecaptury.global.remotecaptury.*;


@Properties(inherit = us.ihmc.remotecaptury.RemoteCapturyConfig.class)
public class CapturyConstraint extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CapturyConstraint() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CapturyConstraint(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CapturyConstraint(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CapturyConstraint position(long position) {
        return (CapturyConstraint)super.position(position);
    }
    @Override public CapturyConstraint getPointer(long i) {
        return new CapturyConstraint((Pointer)this).offsetAddress(i);
    }

	public native int actor(); public native CapturyConstraint actor(int setter);
	public native @Cast("char") byte jointName(int i); public native CapturyConstraint jointName(int i, byte setter);
	@MemberGetter public native @Cast("char*") BytePointer jointName();
	public native @ByRef CapturyTransform transform(); public native CapturyConstraint transform(CapturyTransform setter);
	public native float weight(); public native CapturyConstraint weight(float setter);
	public native @Cast("char") byte constrainTranslation(); public native CapturyConstraint constrainTranslation(byte setter);	// if 0 ignore the translational part of the transform
	public native @Cast("char") byte constrainRotation(); public native CapturyConstraint constrainRotation(byte setter);	// if 0 ignore the rotational part of the transform
}
