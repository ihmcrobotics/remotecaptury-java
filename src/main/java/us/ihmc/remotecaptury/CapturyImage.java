// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package us.ihmc.remotecaptury;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static us.ihmc.remotecaptury.global.remotecaptury.*;


@Properties(inherit = us.ihmc.remotecaptury.RemoteCapturyConfig.class)
public class CapturyImage extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CapturyImage() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CapturyImage(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CapturyImage(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CapturyImage position(long position) {
        return (CapturyImage)super.position(position);
    }
    @Override public CapturyImage getPointer(long i) {
        return new CapturyImage((Pointer)this).offsetAddress(i);
    }

	public native int width(); public native CapturyImage width(int setter);
	public native int height(); public native CapturyImage height(int setter);
	public native int camera(); public native CapturyImage camera(int setter);		// camera index
	public native @Cast("uint64_t") long timestamp(); public native CapturyImage timestamp(long setter);	// in microseconds
	public native @Cast("uint8_t*") BytePointer data(); public native CapturyImage data(BytePointer setter);		// packed image data: stride = width*3 bytes
					// data is expected to be formatted as RGB
	public native @Cast("uint8_t*") BytePointer gpuData(); public native CapturyImage gpuData(BytePointer setter);
}
